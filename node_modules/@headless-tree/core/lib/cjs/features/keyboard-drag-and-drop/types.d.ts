import { ItemInstance, SetStateFn } from "../../types/core";
export interface KDndDataRef {
    kDndDataTransfer: DataTransfer | undefined;
}
export declare enum AssistiveDndState {
    None = 0,
    Started = 1,
    Dragging = 2,
    Completed = 3,
    Aborted = 4
}
export type KeyboardDragAndDropFeatureDef<T> = {
    state: {
        assistiveDndState?: AssistiveDndState | null;
    };
    config: {
        setAssistiveDndState?: SetStateFn<AssistiveDndState | undefined | null>;
        onStartKeyboardDrag?: (items: ItemInstance<T>[]) => void;
    };
    treeInstance: {
        startKeyboardDrag: (items: ItemInstance<T>[]) => void;
        startKeyboardDragOnForeignObject: (dataTransfer: DataTransfer) => void;
        stopKeyboardDrag: () => void;
    };
    itemInstance: {};
    hotkeys: "startDrag" | "cancelDrag" | "completeDrag" | "dragUp" | "dragDown";
};
