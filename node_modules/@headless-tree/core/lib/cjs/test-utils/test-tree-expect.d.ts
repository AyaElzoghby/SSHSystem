import { DragEvent } from "react";
import { TestTree } from "./test-tree";
import { DragTarget } from "../features/drag-and-drop/types";
import { TreeState } from "../types/core";
export declare class TestTreeExpect<T> {
    private tree;
    protected itemInstance(itemId: string): import("../types/core").ItemInstance<T>;
    protected itemProps(itemId: string): Record<string, any>;
    constructor(tree: TestTree<T>);
    foldersExpanded(...itemIds: string[]): void;
    foldersCollapsed(...itemIds: string[]): void;
    hasChildren(itemId: string, children: string[]): void;
    substate<K extends keyof TreeState<T>>(key: K, value: TreeState<T>[K]): void;
    dropped(draggedItems: string[], target: DragTarget<any>): void;
    dragOverNotAllowed(itemId: string, event?: DragEvent): DragEvent<Element>;
    defaultDragLineProps(indent?: number): void;
}
