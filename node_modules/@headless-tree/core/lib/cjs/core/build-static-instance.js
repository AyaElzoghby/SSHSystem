"use strict";
/* eslint-disable no-continue,no-labels,no-extra-label */
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildStaticInstance = void 0;
const buildStaticInstance = (features, instanceType, buildOpts) => {
    const instance = {};
    const finalize = () => {
        const opts = buildOpts(instance);
        featureLoop: for (let i = 0; i < features.length; i++) {
            // Loop goes in forward order, each features overwrite previous ones and wraps those in a prev() fn
            const definition = features[i][instanceType];
            if (!definition)
                continue featureLoop;
            methodLoop: for (const [key, method] of Object.entries(definition)) {
                if (!method)
                    continue methodLoop;
                const prev = instance[key];
                instance[key] = (...args) => {
                    return method(Object.assign(Object.assign({}, opts), { prev }), ...args);
                };
            }
        }
    };
    return [instance, finalize];
};
exports.buildStaticInstance = buildStaticInstance;
