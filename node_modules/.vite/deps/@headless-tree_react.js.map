{
  "version": 3,
  "sources": ["../../@headless-tree/react/lib/esm/assistive-tree-description.js", "../../@headless-tree/react/lib/esm/use-tree.js"],
  "sourcesContent": ["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport { AssistiveDndState, } from \"@headless-tree/core\";\n// https://medium.com/salesforce-ux/4-major-patterns-for-accessible-drag-and-drop-1d43f64ebf09\nconst styles = {\n    position: \"absolute\",\n    margin: \"-1px\",\n    width: \"1px\",\n    height: \"1px\",\n    overflow: \"hidden\",\n    clip: \"rect(0 0 0 0)\",\n};\nconst getDefaultLabel = (dnd, assistiveState, hotkeys) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    if (!hotkeys.startDrag)\n        return \"\"; // No hotkey feature configured\n    const itemNames = (_b = (_a = dnd === null || dnd === void 0 ? void 0 : dnd.draggedItems) === null || _a === void 0 ? void 0 : _a.map((item) => item.getItemName()).join(\", \")) !== null && _b !== void 0 ? _b : \"\";\n    const position = !(dnd === null || dnd === void 0 ? void 0 : dnd.dragTarget)\n        ? \"None\"\n        : \"childIndex\" in dnd.dragTarget\n            ? `${dnd.dragTarget.childIndex} of ${dnd.dragTarget.item.getChildren().length} in ${dnd.dragTarget.item.getItemName()}`\n            : `in ${dnd.dragTarget.item.getItemName()}`;\n    const navGuide = `Press ${(_c = hotkeys.dragUp) === null || _c === void 0 ? void 0 : _c.hotkey} and ${(_d = hotkeys.dragDown) === null || _d === void 0 ? void 0 : _d.hotkey} to move up or down, ` +\n        `${(_e = hotkeys.completeDrag) === null || _e === void 0 ? void 0 : _e.hotkey} to drop, ${(_f = hotkeys.cancelDrag) === null || _f === void 0 ? void 0 : _f.hotkey} to abort.`;\n    switch (assistiveState) {\n        case AssistiveDndState.Started:\n            return itemNames\n                ? `Dragging ${itemNames}. Current position: ${position}. ${navGuide}`\n                : `Current position: ${position}. ${navGuide}`;\n        case AssistiveDndState.Dragging:\n            return itemNames ? `${itemNames}, ${position}` : position;\n        case AssistiveDndState.Completed:\n            return `Drag completed. Press ${(_g = hotkeys.startDrag) === null || _g === void 0 ? void 0 : _g.hotkey} to move selected items`;\n        case AssistiveDndState.Aborted:\n            return `Drag cancelled. Press ${(_h = hotkeys.startDrag) === null || _h === void 0 ? void 0 : _h.hotkey} to move selected items`;\n        case AssistiveDndState.None:\n        default:\n            return `Press ${(_j = hotkeys.startDrag) === null || _j === void 0 ? void 0 : _j.hotkey} to move selected items`;\n    }\n};\nexport const AssistiveTreeDescription = (_a) => {\n    var _b;\n    var { tree, getLabel = getDefaultLabel } = _a, props = __rest(_a, [\"tree\", \"getLabel\"]);\n    const state = tree.getState();\n    return (React.createElement(\"span\", Object.assign({ \"aria-live\": \"assertive\" }, props, { style: Object.assign(Object.assign({}, styles), props.style) }), getLabel(state.dnd, (_b = state.assistiveDndState) !== null && _b !== void 0 ? _b : AssistiveDndState.None, tree.getHotkeyPresets())));\n};\n", "import { useEffect, useInsertionEffect, useState } from \"react\";\nimport { createTree } from \"@headless-tree/core\";\nexport const useTree = (config) => {\n    const [tree] = useState(() => ({ current: createTree(config) }));\n    const [state, setState] = useState(() => tree.current.getState());\n    useEffect(() => {\n        tree.current.rebuildTree();\n    }, [tree]); // runs only once after mount\n    useInsertionEffect(() => {\n        tree.current.setConfig((prev) => (Object.assign(Object.assign(Object.assign({}, prev), config), { state: Object.assign(Object.assign({}, state), config.state), setState: (state) => {\n                var _a;\n                setState(state);\n                (_a = config.setState) === null || _a === void 0 ? void 0 : _a.call(config, state);\n            } })));\n    });\n    return tree.current;\n};\n"],
  "mappings": ";;;;;;;;;;;;AAWA,mBAAkB;AAXlB,IAAI,SAAkC,SAAU,GAAG,GAAG;AAClD,MAAI,IAAI,CAAC;AACT,WAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI;AAC9E,MAAE,CAAC,IAAI,EAAE,CAAC;AACd,MAAI,KAAK,QAAQ,OAAO,OAAO,0BAA0B;AACrD,aAAS,IAAI,GAAG,IAAI,OAAO,sBAAsB,CAAC,GAAG,IAAI,EAAE,QAAQ,KAAK;AACpE,UAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,UAAU,qBAAqB,KAAK,GAAG,EAAE,CAAC,CAAC;AACzE,UAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA,IACxB;AACJ,SAAO;AACX;AAIA,IAAM,SAAS;AAAA,EACX,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,MAAM;AACV;AACA,IAAM,kBAAkB,CAAC,KAAK,gBAAgB,YAAY;AACtD,MAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACpC,MAAI,CAAC,QAAQ;AACT,WAAO;AACX,QAAM,aAAa,MAAM,KAAK,QAAQ,QAAQ,QAAQ,SAAS,SAAS,IAAI,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG,IAAI,CAAC,SAAS,KAAK,YAAY,CAAC,EAAE,KAAK,IAAI,OAAO,QAAQ,OAAO,SAAS,KAAK;AACjN,QAAM,WAAW,EAAE,QAAQ,QAAQ,QAAQ,SAAS,SAAS,IAAI,cAC3D,SACA,gBAAgB,IAAI,aAChB,GAAG,IAAI,WAAW,UAAU,OAAO,IAAI,WAAW,KAAK,YAAY,EAAE,MAAM,OAAO,IAAI,WAAW,KAAK,YAAY,CAAC,KACnH,MAAM,IAAI,WAAW,KAAK,YAAY,CAAC;AACjD,QAAM,WAAW,UAAU,KAAK,QAAQ,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG,MAAM,SAAS,KAAK,QAAQ,cAAc,QAAQ,OAAO,SAAS,SAAS,GAAG,MAAM,yBACpK,KAAK,QAAQ,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG,MAAM,cAAc,KAAK,QAAQ,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,MAAM;AACtK,UAAQ,gBAAgB;AAAA,IACpB,KAAK,kBAAkB;AACnB,aAAO,YACD,YAAY,SAAS,uBAAuB,QAAQ,KAAK,QAAQ,KACjE,qBAAqB,QAAQ,KAAK,QAAQ;AAAA,IACpD,KAAK,kBAAkB;AACnB,aAAO,YAAY,GAAG,SAAS,KAAK,QAAQ,KAAK;AAAA,IACrD,KAAK,kBAAkB;AACnB,aAAO,0BAA0B,KAAK,QAAQ,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,MAAM;AAAA,IAC3G,KAAK,kBAAkB;AACnB,aAAO,0BAA0B,KAAK,QAAQ,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,MAAM;AAAA,IAC3G,KAAK,kBAAkB;AAAA,IACvB;AACI,aAAO,UAAU,KAAK,QAAQ,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,MAAM;AAAA,EAC/F;AACJ;AACO,IAAM,2BAA2B,CAAC,OAAO;AAC5C,MAAI;AACJ,MAAI,EAAE,MAAM,WAAW,gBAAgB,IAAI,IAAI,QAAQ,OAAO,IAAI,CAAC,QAAQ,UAAU,CAAC;AACtF,QAAM,QAAQ,KAAK,SAAS;AAC5B,SAAQ,aAAAA,QAAM,cAAc,QAAQ,OAAO,OAAO,EAAE,aAAa,YAAY,GAAG,OAAO,EAAE,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG,MAAM,KAAK,EAAE,CAAC,GAAG,SAAS,MAAM,MAAM,KAAK,MAAM,uBAAuB,QAAQ,OAAO,SAAS,KAAK,kBAAkB,MAAM,KAAK,iBAAiB,CAAC,CAAC;AAClS;;;ACvDA,IAAAC,gBAAwD;AAEjD,IAAM,UAAU,CAAC,WAAW;AAC/B,QAAM,CAAC,IAAI,QAAI,wBAAS,OAAO,EAAE,SAAS,WAAW,MAAM,EAAE,EAAE;AAC/D,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS,MAAM,KAAK,QAAQ,SAAS,CAAC;AAChE,+BAAU,MAAM;AACZ,SAAK,QAAQ,YAAY;AAAA,EAC7B,GAAG,CAAC,IAAI,CAAC;AACT,wCAAmB,MAAM;AACrB,SAAK,QAAQ,UAAU,CAAC,SAAU,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,IAAI,GAAG,MAAM,GAAG,EAAE,OAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,GAAG,OAAO,KAAK,GAAG,UAAU,CAACC,WAAU;AAC7K,UAAI;AACJ,eAASA,MAAK;AACd,OAAC,KAAK,OAAO,cAAc,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,QAAQA,MAAK;AAAA,IACrF,EAAE,CAAC,CAAE;AAAA,EACb,CAAC;AACD,SAAO,KAAK;AAChB;",
  "names": ["React", "import_react", "state"]
}
